spring.application.name=backend

spring.datasource.username=${MYSQLUSER}
spring.datasource.password=${MYSQLPASSWORD}
spring.datasource.url=jdbc:mysql://${MYSQLHOST}:${MYSQLPORT}/${MYSQLDATABASE}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

# spring.jpa.hibernate.ddl-auto is used for database initialization. We set the value to update value so that a table will be created in the database automatically corresponding to defined data model. Any change to the model will also trigger an update to the table. For production, this property should be validate.

project.app.jwtCookieName=abc
project.app.jwtSecret=abc
project.app.jwtExpirationMs=abc

api.key=abc

s3.access.key=abc
s3.secret.key=abc

stripe.key=abc
stripe.secret.key=abc

allow.origin=abc

spring.data.mongodb.uri=${MONGO_URL}/test?retryWrites=true&w=majority&&authSource=admin

# for handling multipart file uploads
spring.servlet.multipart.enabled=true
# enables
spring.servlet.multipart.max-file-size=200MB
# max size for each indiv uploaded file
spring.servlet.multipart.max-request-size=200MB
# max size for entire multipart request
spring.servlet.multipart.file-size-threshold=5MB
#  if >1mb, write it out to hard disk. reading from disk instead of memory. more efficient, not occupying memory
# if smaller, kept in memory

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=abc
spring.mail.password=abc
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

